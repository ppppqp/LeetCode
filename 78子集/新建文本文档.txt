
class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> temp;
        vector<vector<int>> ret;
        for(int i=1;i<=nums.size();i++)
        {
            temp=combine(nums.size(),i);
            
            for(int t=0;t<temp.size();t++)
            {  //cout<<"t="<<t<<endl;
                for(int q=0;q<temp[0].size();q++)
                {
                    //cout<<"q="<<q<<endl;
                    temp[t][q]=nums[temp[t][q]-1];
                    //cout<<"temp="<<temp[t][q]<<' ';
                }
                //cout<<endl;
                ret.push_back(temp[t]);
            }
            
        }
        vector<int> x;
        ret.push_back(x);
        return ret;
    }
    vector<vector<int>> combine(int n, int k) {
        vector<int> ans(k+1);
        vector<vector<int>> ret;
        for(int i=0;i<k;i++)
        {
            ans[i]=i+1;
        }
        ans[k]=n+1;
        int i=0;
        while(i<k)
        {       
                vector<int>temp;
                for(int p=0;p<k;p++) temp.push_back(ans[p]);
                ret.push_back(temp);
                i=0;
                while(i<k&&ans[i]==ans[i+1]-1)
                {
                    ans[i]=i+1;
                    i++;
                    //cout<<"i="<<i;
                }
                ans[i]++;
                
        }
        return ret;
    }
};