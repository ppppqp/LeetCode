class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        if(intervals.size()==0)
        {
            intervals.insert(intervals.begin(),newInterval);
            return intervals;
        }
        int flag=0;
        for (int i=0;i<intervals.size();i++)
        {
            if(intervals[i][0]>=newInterval[0])
            {
                intervals.insert(intervals.begin()+i,newInterval);//找到新区间的正确位置
                flag=1;
                break;
            }
        }
        if(flag==0)
        intervals.push_back(newInterval);
        for(int i=0;i<intervals.size()-1;i++)
        {
            if(intervals[i][1]>=intervals[i+1][0])
            {
                intervals[i][1]=max(intervals[i+1][1],intervals[i][1]);//合并区间
                intervals.erase(intervals.begin()+i+1);
                i--;
            }
        }
        return intervals;
    }
};