class Solution {
public:
    int divide(int dividend, int divisor) {
        int temp=0;
        if(dividend==-2147483648&&divisor==-1) return 2147483647;
        if(dividend==-2147483648&&divisor==1)return -2147483648;
        int neg=0;
        if(dividend==0) return 0;
        /*
        if(dividend<0&&divisor>0||dividend>0&&divisor<0)
        {
            dividend=abs(dividend);
            divisor=abs(divisor);
            neg=1;
        }
        
        if(dividend<0&&divisor<0)
        {
            dividend=abs(dividend);
            divisor=abs(divisor);   
        }
        cout<<dividend<<' '<<divisor;
        */
        if(dividend>0&&divisor>0)
        while(dividend>=divisor)
        {
            dividend-=divisor;
            temp++;
        }
        if(dividend<0&&divisor>0)
        while(dividend<=-divisor)
        {
            dividend+=divisor;
            temp--;
        }
        if(dividend>0&&divisor<0)
        while(-dividend<=divisor)
        {
            dividend+=divisor;
            temp--;
        }
        if(dividend<0&&divisor<0)
        while(dividend<=divisor)
        {
            dividend-=divisor;
            temp++;
        }
       return temp;
        
    }
};